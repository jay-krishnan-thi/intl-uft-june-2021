/***************************************************************
    *  DO NOT EDIT THIS FILE!
    *         
    *  This file is automatically generated by HP Service Test.
    *  Manually changing the contents of this file may result in 
    *  loss of information.
    *          
    *  To edit the test, open the file ‘APITest1.st’ 
    *  in HP Service Test.
     ***************************************************************/
    
    namespace Script
    {
    using Microsoft.Win32;
    using System;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Threading;
    using System.Xml;
    using System.Xml.Schema;
    using HP.ST.Fwk.SOAReplayAPI;
    using HP.ST.Shared.Utilities;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.PropInfo;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Setters;
    using HP.ST.Fwk.RunTimeFWK.BindingFWK.Getters;
    using HP.ST.Fwk.RunTimeFWK;
    using HP.ST.Fwk.RunTimeFWK.Utilities;
    using HP.ST.Fwk.RunTimeFWK.HelperClasses;
    using HP.ST.Fwk.RunTimeFWK.CompositeActivities;
    using HP.ST.Fwk.ReporterFWK;
    using HP.ST.Ext.BindingImpl.Getters;
    using HP.ST.Ext.BindingImpl.Setters;
    using HP.ST.Ext.BindingImpl.Setters.DataSourceSetters;
    using HP.ST.Ext.LoadRunnerRTAddin;
    using HP.ST.Fwk.JVMLoader;
    
    
    
    public partial class LRWorkFlowScript : LRWorkFlowScriptBase
    {    
    	TestUserCode _userCode = null;
        TestEntities _flow = null;
    	LoadRunner.LrApi lr;
    
    	
    	public BindDirection bind_dir62 = null;
        public BindDirection bind_dir63 = null;
        public BindDirection bind_dir64 = null;
        public BindDirection bind_dir65 = null;
        public HP.ST.Ext.LoadRunnerRTAddin.LoadRunnerDataCursor LoadRunnerDataCursor14 = null;
        public BindDirection bind_dir66 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy LoadRunnerDataCursor14_Policy = null;
        public HP.ST.Ext.LoadRunnerRTAddin.LoadRunnerDataCursor LoadRunnerDataCursor15 = null;
        public BindDirection bind_dir67 = null;
        public HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy LoadRunnerDataCursor15_Policy = null;
        public BindDirection bind_dir68 = null;
        public BindDirection bind_dir69 = null;
        public BindDirection bind_dir70 = null;
        
        public LRWorkFlowScript(ISTRunTimeContext ctx)
            : base(VuserClass.CommandLineArguments, ctx, "test", VuserClass.executionUnitInput)
        {
        	this._context = ctx;
        	UpdateContextWithActionFolder(String.Empty);
        	UpdateTestSettings(ctx);
        }
        
        internal void InitializeComponent()
        {
        	this._context.SnapshotManager.EnableSnapshots = false;
        	this._context.PropertyBag["IsRunningInLodeMode"] = true;
        	_userCode = new TestUserCode();
            _flow = _userCode;
        	LoadInput();
        	this.Activities.Clear();
        	_flow.DataFetchActivity10 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity10");
            _flow.DataFetchActivity7 = new HP.ST.Ext.BasicActivities.DataFetchActivity(_context,"DataFetchActivity7");
            _flow.StartActivity1 = new HP.ST.Ext.BasicActivities.StartActivity(_context,"StartActivity1");
            _flow.Loop2 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Loop<Loop2Input>(_context,"Loop2",LoopType.ForEach);
            _flow.DataExporterActivity9 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity9");
            _flow.DataExporterActivity12 = new HP.ST.Ext.BasicActivities.DataExporterActivity(_context,"DataExporterActivity12");
            _flow.DataExporterCloseActivity13 = new HP.ST.Ext.BasicActivities.DataExporterCloseActivity(_context,"DataExporterCloseActivity13");
            _flow.EndActivity3 = new HP.ST.Ext.BasicActivities.EndActivity(_context,"EndActivity3");
            _flow.DataDisconnectActivity8 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity8");
            _flow.DataDisconnectActivity11 = new HP.ST.Ext.BasicActivities.DataDisconnectActivity(_context,"DataDisconnectActivity11");
            this.LoadRunnerDataCursor14 = new HP.ST.Ext.LoadRunnerRTAddin.LoadRunnerDataCursor(_context,"LoadRunnerDataCursor14");
            this.LoadRunnerDataCursor14_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            this.LoadRunnerDataCursor15 = new HP.ST.Ext.LoadRunnerRTAddin.LoadRunnerDataCursor(_context,"LoadRunnerDataCursor15");
            this.LoadRunnerDataCursor15_Policy = new HP.ST.Fwk.SOAReplayAPI.DataHandling.CursorMovementPolicy();
            _flow.Sequence6 = new HP.ST.Fwk.RunTimeFWK.CompositeActivities.Sequence(_context,"Sequence6");
            _flow.StServiceCallActivity4 = new HP.ST.Ext.WebServicesActivities.StServiceCallActivity(_context,"StServiceCallActivity4");
            _flow.StServiceCallActivity5 = new HP.ST.Ext.WebServicesActivities.StServiceCallActivity(_context,"StServiceCallActivity5");
            _flow.DataFetchActivity10.Comment = @"";
            _flow.DataFetchActivity10.IconPath = @"";
            _flow.DataFetchActivity10.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            _flow.DataFetchActivity10.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity10.QueryClassName = @"HP.ST.Ext.CustomDataProviders.LocalDataQuery";
            XmlDocument DataFetchActivity10_QueryParameters_Document = new XmlDocument();
            DataFetchActivity10_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity10Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>3d4d8775-26b1-48f0-b492-83821007f497</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value>D1</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>TableStructure</Name><Value>Ticket number,Integer,</Value></QueryParameter><QueryParameter><Name>TableContents</Name><Value>3^2</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity10_QueryParameters_Document.LoadXml(xmlDataFetchActivity10Params);
            _flow.DataFetchActivity10.QueryParameters = DataFetchActivity10_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add("D1", _flow.DataFetchActivity10);
            this.Activities.Add (_flow.DataFetchActivity10);
            _flow.DataFetchActivity7.Comment = @"";
            _flow.DataFetchActivity7.IconPath = @"";
            _flow.DataFetchActivity7.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            _flow.DataFetchActivity7.AssemblyPath = @"AddIns\ServiceTest\BaseDataProviders\HP.ST.Ext.CustomDataProviders.dll";
            _flow.DataFetchActivity7.QueryClassName = @"HP.ST.Ext.CustomDataProviders.LocalDataQuery";
            XmlDocument DataFetchActivity7_QueryParameters_Document = new XmlDocument();
            DataFetchActivity7_QueryParameters_Document.PreserveWhitespace = true;
            string xmlDataFetchActivity7Params = @"<Arguments><QueryParametersContainer><QueryParameter><Name>Id</Name><Value>1f61a005-92df-4e23-b0d3-ba38e3f883e5</Value></QueryParameter><QueryParameter><Name>QueryName</Name><Value> UFT Jay</Value></QueryParameter><QueryParameter><Name>IsEmbedded</Name><Value>True</Value></QueryParameter><QueryParameter><Name>Externalized</Name><Value>False</Value></QueryParameter><QueryParameter><Name>GroupText</Name><Value></Value></QueryParameter><QueryParameter><Name>TableStructure</Name><Value>Number of tickets,String,</Value></QueryParameter><QueryParameter><Name>TableContents</Name><Value>2^^</Value></QueryParameter></QueryParametersContainer></Arguments>";
            DataFetchActivity7_QueryParameters_Document.LoadXml(xmlDataFetchActivity7Params);
            _flow.DataFetchActivity7.QueryParameters = DataFetchActivity7_QueryParameters_Document;
            _flow.dataSourceNameToDataSource.Add(" UFT Jay", _flow.DataFetchActivity7);
            this.Activities.Add (_flow.DataFetchActivity7);
            _flow.StartActivity1.Comment = @"";
            _flow.StartActivity1.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.StartActivity1.Name = @"Start";
            _flow.StartActivity1.JVM = new HP.ST.Ext.BasicActivities.JVMProperties();
            _flow.StartActivity1.IsJavaUsed = false;
            _flow.StartActivity1.JVM.Classpath = @"%CLASSPATH%";
            _flow.StartActivity1.JVM.AdditionalVMParameters = @"";
            _flow.StartActivity1.JMS = new HP.ST.Ext.BasicActivities.JMSProperties();
            _flow.StartActivity1.IsJmsUsed = false;
            _flow.StartActivity1.JMS.JNDIContextFactory = @"<Select...>";
            _flow.StartActivity1.JMS.JNDIProviderUrl = @"";
            _flow.StartActivity1.JMS.JMSConnectionFactory = @"";
            _flow.StartActivity1.JMS.SecurityPrincipal = @"";
            _flow.StartActivity1.JMS.SecurityCredentials = @"";
            _flow.StartActivity1.JMS.JMSClientID = @"";
            _flow.StartActivity1.JMS.SSLPassword = @"";
            _flow.StartActivity1.JMS.SSLTrustedCertificate = @"";
            _flow.StartActivity1.JMS.SSLIdentity = @"";
            _flow.StartActivity1.JMS.ConnectionsPerProcess = @"1";
            _flow.StartActivity1.JMS.TimeoutOptions = @"DN_User_defined_Timeout";
            _flow.StartActivity1.JMS.UserTimeout = @"20";
            _flow.StartActivity1.JMS.GenerateAutoSelector = @"No";
            _flow.StartActivity1.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            this.Activities.Add (_flow.StartActivity1);
            _flow.Loop2.ConditionAsString = @"For each item in {DataSource. UFT Jay}";
            _flow.Loop2.NumberOfIterations = (int)1;
            _flow.Loop2.Condition += delegate(object sender,STActivityBaseEventArgs e)
            {
            return !LoadRunnerDataCursor14.IsAtEndPosition;
            };
            _flow.Loop2.Comment = @"";
            _flow.Loop2.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_loop.png";
            _flow.Loop2.Name = @"Test Flow";
            _flow.Loop2.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            _flow.Loop2.Activities.Add (this.LoadRunnerDataCursor14);
            _flow.Loop2.Activities.Add (this.LoadRunnerDataCursor15);
            _flow.Loop2.Activities.Add (_flow.Sequence6);
            this.Activities.Add (_flow.Loop2);
            _flow.DataExporterActivity9.Comment = @"";
            _flow.DataExporterActivity9.IconPath = @"";
            _flow.DataExporterActivity9.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi125 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter64 = new VTDObjectGetter(pi125);
            VTDPropertyInfoBase pi126 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter62 = new VTDObjectSetter(pi126);
            binding_setter62 = new StringFormaterDecorator(binding_setter62,"{Step.DataFetchActivity7.OutTable}");
            bind_dir62 = new BindDirection(_flow.DataFetchActivity7,binding_getter64,binding_setter62,BindTargetType.ToInProperty);
            _flow.DataExporterActivity9.InDirections.Add(bind_dir62);
            this.Activities.Add (_flow.DataExporterActivity9);
            _flow.DataExporterActivity12.Comment = @"";
            _flow.DataExporterActivity12.IconPath = @"";
            _flow.DataExporterActivity12.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi127 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter65 = new VTDObjectGetter(pi127);
            VTDPropertyInfoBase pi128 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter63 = new VTDObjectSetter(pi128);
            binding_setter63 = new StringFormaterDecorator(binding_setter63,"{Step.DataFetchActivity10.OutTable}");
            bind_dir63 = new BindDirection(_flow.DataFetchActivity10,binding_getter65,binding_setter63,BindTargetType.ToInProperty);
            _flow.DataExporterActivity12.InDirections.Add(bind_dir63);
            this.Activities.Add (_flow.DataExporterActivity12);
            _flow.DataExporterCloseActivity13.Comment = @"";
            _flow.DataExporterCloseActivity13.IconPath = @"";
            _flow.DataExporterCloseActivity13.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            this.Activities.Add (_flow.DataExporterCloseActivity13);
            _flow.EndActivity3.Comment = @"";
            _flow.EndActivity3.IconPath = @"AddIns\ServiceTest\BasicActivities\toolbox_code_activity.png";
            _flow.EndActivity3.Name = @"End";
            _flow.EndActivity3.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            this.Activities.Add (_flow.EndActivity3);
            _flow.DataDisconnectActivity8.Comment = @"";
            _flow.DataDisconnectActivity8.IconPath = @"";
            _flow.DataDisconnectActivity8.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi129 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter66 = new VTDObjectGetter(pi129);
            VTDPropertyInfoBase pi130 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter64 = new VTDObjectSetter(pi130);
            binding_setter64 = new StringFormaterDecorator(binding_setter64,"{Step.DataFetchActivity7.OutTable}");
            bind_dir64 = new BindDirection(_flow.DataFetchActivity7,binding_getter66,binding_setter64,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity8.InDirections.Add(bind_dir64);
            this.Activities.Add (_flow.DataDisconnectActivity8);
            _flow.DataDisconnectActivity11.Comment = @"";
            _flow.DataDisconnectActivity11.IconPath = @"";
            _flow.DataDisconnectActivity11.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi131 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter67 = new VTDObjectGetter(pi131);
            VTDPropertyInfoBase pi132 = new VTDPropertyInfoBase("Data");
            VTDBaseSetter binding_setter65 = new VTDObjectSetter(pi132);
            binding_setter65 = new StringFormaterDecorator(binding_setter65,"{Step.DataFetchActivity10.OutTable}");
            bind_dir65 = new BindDirection(_flow.DataFetchActivity10,binding_getter67,binding_setter65,BindTargetType.ToInProperty);
            _flow.DataDisconnectActivity11.InDirections.Add(bind_dir65);
            this.Activities.Add (_flow.DataDisconnectActivity11);
            this.LoadRunnerDataCursor14.Comment = @"";
            this.LoadRunnerDataCursor14.IconPath = @"";
            this.LoadRunnerDataCursor14.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi133 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter68 = new VTDObjectGetter(pi133);
            VTDPropertyInfoBase pi134 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter66 = new VTDObjectSetter(pi134);
            binding_setter66 = new StringFormaterDecorator(binding_setter66,"{Step.DataFetchActivity7.OutTable}");
            bind_dir66 = new BindDirection(_flow.DataFetchActivity7,binding_getter68,binding_setter66,BindTargetType.ToInProperty);
            this.LoadRunnerDataCursor14.InDirections.Add(bind_dir66);
            this.LoadRunnerDataCursor14_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.LoadRunnerDataCursor14_Policy.StartAtSpecificRow = 1;
            this.LoadRunnerDataCursor14_Policy.StartCondition.ColumnName = "";
            this.LoadRunnerDataCursor14_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.LoadRunnerDataCursor14_Policy.StartCondition.Value = "";
            this.LoadRunnerDataCursor14_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.LoadRunnerDataCursor14_Policy.EndAtSpecificRow = 1;
            this.LoadRunnerDataCursor14_Policy.EndCondition.ColumnName = "";
            this.LoadRunnerDataCursor14_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.LoadRunnerDataCursor14_Policy.EndCondition.Value = "";
            this.LoadRunnerDataCursor14_Policy.StepType = CursorStepType.Forward;
            this.LoadRunnerDataCursor14_Policy.StepSize = 1;
            this.LoadRunnerDataCursor14_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.LoadRunnerDataCursor14.Policy = this.LoadRunnerDataCursor14_Policy;
            this.LoadRunnerDataCursor14.ReportStepData = true;
            _flow.Loop2.BeforeExecuteStepEvent += this.LoadRunnerDataCursor14.ResetCursor;
            this.LoadRunnerDataCursor15.Comment = @"";
            this.LoadRunnerDataCursor15.IconPath = @"";
            this.LoadRunnerDataCursor15.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi135 = new VTDPropertyInfoBase("OutTable");
            VTDBaseGetter binding_getter69 = new VTDObjectGetter(pi135);
            VTDPropertyInfoBase pi136 = new VTDPropertyInfoBase("InTable");
            VTDBaseSetter binding_setter67 = new VTDObjectSetter(pi136);
            binding_setter67 = new StringFormaterDecorator(binding_setter67,"{Step.DataFetchActivity10.OutTable}");
            bind_dir67 = new BindDirection(_flow.DataFetchActivity10,binding_getter69,binding_setter67,BindTargetType.ToInProperty);
            this.LoadRunnerDataCursor15.InDirections.Add(bind_dir67);
            this.LoadRunnerDataCursor15_Policy.StartPosition = CursorStartPosition.FirstRecord;
            this.LoadRunnerDataCursor15_Policy.StartAtSpecificRow = 1;
            this.LoadRunnerDataCursor15_Policy.StartCondition.ColumnName = "";
            this.LoadRunnerDataCursor15_Policy.StartCondition.Comparison = ConditionOperator.Equal;
            this.LoadRunnerDataCursor15_Policy.StartCondition.Value = "";
            this.LoadRunnerDataCursor15_Policy.EndPosition = CursorEndPosition.LastRecord;
            this.LoadRunnerDataCursor15_Policy.EndAtSpecificRow = 1;
            this.LoadRunnerDataCursor15_Policy.EndCondition.ColumnName = "";
            this.LoadRunnerDataCursor15_Policy.EndCondition.Comparison = ConditionOperator.Equal;
            this.LoadRunnerDataCursor15_Policy.EndCondition.Value = "";
            this.LoadRunnerDataCursor15_Policy.StepType = CursorStepType.Forward;
            this.LoadRunnerDataCursor15_Policy.StepSize = 1;
            this.LoadRunnerDataCursor15_Policy.ActionAfterLastRecord = CursorActionAfterLastRecord.Wraparound;
            this.LoadRunnerDataCursor15.Policy = this.LoadRunnerDataCursor15_Policy;
            this.LoadRunnerDataCursor15.ReportStepData = true;
            _flow.Loop2.BeforeExecuteStepEvent += this.LoadRunnerDataCursor15.ResetCursor;
            _flow.Sequence6.Comment = @"";
            _flow.Sequence6.IconPath = @"";
            _flow.Sequence6.Name = @"Sequence6";
            _flow.Sequence6.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            _flow.Sequence6.Activities.Add (_flow.StServiceCallActivity4);
            _flow.Sequence6.Activities.Add (_flow.StServiceCallActivity5);
            XmlDocument StServiceCallActivity4_InputEnvelope_Document = new XmlDocument();
            StServiceCallActivity4_InputEnvelope_Document.PreserveWhitespace = true;
            StServiceCallActivity4_InputEnvelope_Document.LoadXml(
@"<Envelope xmlns=""http://schemas.xmlsoap.org/soap/envelope/""><Body><GetFlights xmlns=""HP.SOAQ.SampleApp""><DepartureCity>Denver</DepartureCity><ArrivalCity>London</ArrivalCity><FlightDate>2021-06-15T00:00:00+00:00</FlightDate></GetFlights></Body></Envelope>");
            _flow.StServiceCallActivity4.InputEnvelope = StServiceCallActivity4_InputEnvelope_Document;
            _flow.StServiceCallActivity4.Comment = @"";
            _flow.StServiceCallActivity4.IconPath = @"AddIns\ServiceTest\WSImportTechnology\ictb_service_operations_16.png";
            _flow.StServiceCallActivity4.Name = @"GetFlights";
            _flow.StServiceCallActivity4.TransportProtocol.SOAPProperties.EndpointAddress = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.StServiceCallActivity4.TransportProtocol.SOAPProperties.EndpointAddress}")) ? @"http://localhost:8000/Flights_SOAP" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.StServiceCallActivity4.TransportProtocol.SOAPProperties.EndpointAddress}");
            _flow.StServiceCallActivity4.TransportProtocol.SOAPProperties.SoapAction = @"HP.SOAQ.SampleApp/IFlightsSoapService/GetFlights";
            _flow.StServiceCallActivity4.TransportProtocol.SOAPProperties.ContentType = @"text/xml; charset=utf-8";
            _flow.StServiceCallActivity4.TransportProtocol.SOAPProperties.Timeout = (int)100000;
            _flow.StServiceCallActivity4.Service = @"Flights_Service";
            _flow.StServiceCallActivity4.Port = @"FlightsServiceMethods";
            _flow.StServiceCallActivity4.Operation = @"GetFlights";
            _flow.StServiceCallActivity4.IsOneWay = false;
            _flow.StServiceCallActivity4.SendRequestToService=true;
            _flow.StServiceCallActivity4.FaultExpected=false;
            _flow.StServiceCallActivity4.IsAsync=false;
            _flow.StServiceCallActivity4.TargetNamespace=@"http://tempuri.org/";
            _flow.StServiceCallActivity4.ListenOnPort = (int)0;
            _flow.StServiceCallActivity4.StartStepEvent += HP.ST.Ext.WebServicesActivities.TransactionHandlers.TransactionStart;
            _flow.StServiceCallActivity4.EndStepEvent += HP.ST.Ext.WebServicesActivities.TransactionHandlers.TransactionEnd;
            _flow.StServiceCallActivity4.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            XmlDocument StServiceCallActivity5_InputEnvelope_Document = new XmlDocument();
            StServiceCallActivity5_InputEnvelope_Document.PreserveWhitespace = true;
            StServiceCallActivity5_InputEnvelope_Document.LoadXml(
@"<Envelope xmlns=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:p1=""http://www.w3.org/2001/XMLSchema-instance""><Body><CreateFlightOrder xmlns=""HP.SOAQ.SampleApp""><FlightOrder><Class>Business</Class><CustomerName>Bob</CustomerName><DepartureDate>{Step.InputProperties.StServiceCallActivity4.Body.GetFlights.FlightDate}</DepartureDate><FlightNumber>{Step.OutputProperties.StServiceCallActivity4.Body.GetFlightsResponse.GetFlightsResult.Flight[1].FlightNumber}</FlightNumber><NumberOfTickets>{DataSource.D1.Ticket number}</NumberOfTickets></FlightOrder></CreateFlightOrder></Body></Envelope>");
            _flow.StServiceCallActivity5.InputEnvelope = StServiceCallActivity5_InputEnvelope_Document;
            _flow.StServiceCallActivity5.Comment = @"";
            _flow.StServiceCallActivity5.IconPath = @"AddIns\ServiceTest\WSImportTechnology\ictb_service_operations_16.png";
            _flow.StServiceCallActivity5.Name = @"CreateFlightOrder";
            _flow.StServiceCallActivity5.TransportProtocol.SOAPProperties.EndpointAddress = String.IsNullOrEmpty(_context.ResourceManager.GetValue(@"{Step.GeneralProperties.StServiceCallActivity5.TransportProtocol.SOAPProperties.EndpointAddress}")) ? @"http://localhost:8000/Flights_SOAP" : _context.ResourceManager.GetValue(@"{Step.GeneralProperties.StServiceCallActivity5.TransportProtocol.SOAPProperties.EndpointAddress}");
            _flow.StServiceCallActivity5.TransportProtocol.SOAPProperties.SoapAction = @"HP.SOAQ.SampleApp/IFlightsSoapService/CreateFlightOrder";
            _flow.StServiceCallActivity5.TransportProtocol.SOAPProperties.ContentType = @"text/xml; charset=utf-8";
            _flow.StServiceCallActivity5.TransportProtocol.SOAPProperties.Timeout = (int)100000;
            _flow.StServiceCallActivity5.Service = @"Flights_Service";
            _flow.StServiceCallActivity5.Port = @"FlightsServiceMethods";
            _flow.StServiceCallActivity5.Operation = @"CreateFlightOrder";
            _flow.StServiceCallActivity5.IsOneWay = false;
            _flow.StServiceCallActivity5.SendRequestToService=true;
            _flow.StServiceCallActivity5.FaultExpected=false;
            _flow.StServiceCallActivity5.IsAsync=false;
            _flow.StServiceCallActivity5.TargetNamespace=@"http://tempuri.org/";
            _flow.StServiceCallActivity5.ListenOnPort = (int)0;
            _flow.StServiceCallActivity5.StartStepEvent += HP.ST.Ext.WebServicesActivities.TransactionHandlers.TransactionStart;
            _flow.StServiceCallActivity5.EndStepEvent += HP.ST.Ext.WebServicesActivities.TransactionHandlers.TransactionEnd;
            _flow.StServiceCallActivity5.TransactionWastedTime += HP.ST.Fwk.RunTimeFWK.TransactionHandlers.TransactionWastedTime;
            VTDPropertyInfoBase pi137 = new VTDPropertyInfoBase("Ticket number");
            VTDBaseGetter binding_getter70 = new VTDObjectGetter(pi137);
            VTDPropertyInfoBase pi138 = new VTDPropertyInfoBase("InputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='CreateFlightOrder'][1]/*[local-name(.)='FlightOrder'][1]/*[local-name(.)='NumberOfTickets'][1]");
            VTDBaseSetter binding_setter68 = new VTDXPathSetter(pi138,XmlTypeCode.Int);
            bind_dir68 = new BindDirection(this.LoadRunnerDataCursor15,binding_getter70,binding_setter68,BindTargetType.ToInProperty);
            _flow.StServiceCallActivity5.InDirections.Add(bind_dir68);
            VTDPropertyInfoBase pi139 = new VTDPropertyInfoBase("OutputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='GetFlightsResponse'][1]/*[local-name(.)='GetFlightsResult'][1]/*[local-name(.)='Flight'][{Array0}]/*[local-name(.)='FlightNumber'][1]");
            VTDBaseGetter binding_getter71 = new VTDXPathGetter(pi139,XmlTypeCode.Int);
            binding_getter71 = new XPathGetterDecorator(binding_getter71,"{Array0}",1);
            VTDPropertyInfoBase pi140 = new VTDPropertyInfoBase("InputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='CreateFlightOrder'][1]/*[local-name(.)='FlightOrder'][1]/*[local-name(.)='FlightNumber'][1]");
            VTDBaseSetter binding_setter69 = new VTDXPathSetter(pi140,XmlTypeCode.Int);
            bind_dir69 = new BindDirection(_flow.StServiceCallActivity4,binding_getter71,binding_setter69,BindTargetType.ToInProperty);
            _flow.StServiceCallActivity5.InDirections.Add(bind_dir69);
            VTDPropertyInfoBase pi141 = new VTDPropertyInfoBase("InputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='GetFlights'][1]/*[local-name(.)='FlightDate'][1]");
            VTDBaseGetter binding_getter72 = new VTDXPathGetter(pi141,XmlTypeCode.DateTime);
            VTDPropertyInfoBase pi142 = new VTDPropertyInfoBase("InputEnvelope","/*[local-name(.)='Envelope'][1]/*[local-name(.)='Body'][1]/*[local-name(.)='CreateFlightOrder'][1]/*[local-name(.)='FlightOrder'][1]/*[local-name(.)='DepartureDate'][1]");
            VTDBaseSetter binding_setter70 = new VTDXPathSetter(pi142,XmlTypeCode.DateTime);
            bind_dir70 = new BindDirection(_flow.StServiceCallActivity4,binding_getter72,binding_setter70,BindTargetType.ToInProperty);
            _flow.StServiceCallActivity5.InDirections.Add(bind_dir70);
            
        }
        
        internal void InitializeEncryptionManagerValues()
        {
        
        }
        	public LoadRunner.LrApi LrApi
    	{
    		set { this.lr = value; }
    	}
    
    	protected override STExecutionResult ExecuteStep()
        {
            return base.ExecuteStep();
        }
    
        public void Start()
        {
            this.ExecuteStep();
            WorkFlowScript_Completed();
        }
        
    
        void Workflow_Executing()
        {	        
        }
        
        void WorkFlowScript_Completed()
        {
          	OnExecutionCompleted();
        }
                    
        void TransactionStart(object sender, EventArgs args)
        {
          	STActivityBase activity = sender as STActivityBase;
          	lr.start_transaction(activity.Name);
        }
            
        void TransactionEnd(object sender, EventArgs args)
        {
           	STActivityBase activity = sender as STActivityBase;
           	lr.end_transaction(activity.Name, lr.PASS);
        }
    
        private void UpdateTestSettings(ISTRunTimeContext ctx)
        {
           	
        }
    
    }
    
    public partial class VuserClass
    {
    	STRunTimeContext ctx;
        LRWorkFlowScript script;
    
        public int Action()
        {
    		
    		try
    		{
    			
                script.LrApi = lr;
                script.InitializeComponent();
                script.Start();
            }
            catch (Exception)
            {
    			// todo: log the error message
            }
            
            return 0;
        }
        
        private void SendLogToVugen(string logText)
    	{
    		lr.log_message(logText);
    	}
    }
    
    }
    